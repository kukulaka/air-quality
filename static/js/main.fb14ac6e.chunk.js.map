{"version":3,"sources":["components/PageContainer/index.tsx","api/request.ts","api/getCities.ts","containers/HomeContainer/TextHeader.tsx","components/AutoComplete/index.tsx","components/ResultsLayout/index.tsx","containers/HomeContainer/SearchAndDisplay/index.tsx","containers/HomeContainer/index.tsx","pages/Home/index.tsx","App.tsx","theme/index.ts","components/ErrorBoundary/index.tsx","index.tsx"],"names":["PageContainer","children","direction","position","minHeight","bgGradient","align","justifyContent","overflow","with","padding","api","axios","create","baseURL","process","request","method","url","params","getCities","a","then","response","data","catch","error","errorMsg","message","meta","results","TextHeader","Props","textStyle","paddingTop","id","paddingBottom","AutoComplete","label","placeholder","itemsList","handleSelectedItemsChange","selectedItems","React","useState","pickerItems","items","disableCreateItem","onSelectedItemsChange","changes","hideToggleButton","renderCustomInput","inputProps","rounded","pointerEvents","color","listStyleProps","ResultsLayout","templateColumns","gap","width","SearchAndDisplay","setSelectedItems","HomeContainer","allCitiesData","setAllCitiesData","setError","loading","setLoading","cityList","setCityList","useEffect","getCityList","allData","cityArray","map","city","cityObj","value","push","cities","height","textAlign","fontSize","status","length","Home","App","extendTheme","styles","global","overflowX","scrollBehavior","textStyles","h1","lineHeight","fontWeight","h2","letterSpacing","fonts","heading","body","colors","primary","space","config","cssVarPrefix","initialColorMode","useSystemColorMode","ErrorBoundary","state","hasError","errorInfo","console","this","props","_","Component","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.fb14ac6e.chunk.js","sourcesContent":["import React from 'react';\nimport { Flex, Box } from '@chakra-ui/react';\n\ninterface Props {\n  children: JSX.Element;\n}\n\nconst PageContainer: React.FC<Props> = ({ children }: Props) => {\n  return (\n    <>\n      <Flex\n        direction=\"column\"\n        position=\"relative\"\n        minHeight=\"100vh\"\n        bgGradient=\"linear(to-r,  #6a0dad, #0da2ff)\"\n        align=\"center\"\n        justifyContent=\"center\"\n        overflow=\"auto\"\n      >\n        <Box with=\"100%\" padding=\"20px\">\n          {children}\n        </Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default PageContainer;\n","import axios, { Method, AxiosResponse } from 'axios';\n\nconst api = axios.create({ baseURL: process.env.REACT_APP_BASE_API });\n\nconst request = <T>(\n  method: Method,\n  url: string,\n  params: any\n): Promise<AxiosResponse<T>> => {\n  return api.request<T>({\n    method,\n    url,\n    params,\n  });\n};\n\nexport default request;\n","import request from './request';\nimport { AllCities, Error } from '../types/Cities';\n\n\nconst getCities = async (): Promise<AllCities | Error | undefined> => {\n  const cityURL: string =\n    '/v2/cities?limit=100&page=1&offset=0&sort=asc&country_id=GB&order_by=city';\n\n  return await request('GET', cityURL, {})\n    .then((response) => {\n      return response.data as AllCities;\n    })\n    .catch((error) => {\n      if (error) {\n        return {error: true, errorMsg: error.message, meta: null, results: null} as Error;\n      }\n    });\n};\n\nexport default getCities;\n","import React from 'react';\nimport { Text, Box } from '@chakra-ui/react';\n\n\nconst TextHeader: React.FC= (Props) => {\n  return (\n    <>\n      <Text textStyle=\"h1\">Compare your Air</Text>\n      <Text paddingTop=\"40px\" id=\"header\" paddingBottom=\"5px\">\n        Compare the air quality between cities in the UK.\n      </Text>\n      <Text>Select cities to compare using the search tool below.</Text>\n    </>\n  );\n};\n\nexport default TextHeader;\n","import React from 'react';\nimport { CUIAutoComplete } from 'chakra-ui-autocomplete';\nimport { City } from '../../types/City';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport { InputGroup, InputLeftElement, Input } from '@chakra-ui/react';\n\ninterface Props {\n  label: string;\n  placeholder: string;\n  itemsList: City[];\n  selectedItems: City[];\n  handleSelectedItemsChange(selectedItems?: City[]): any;\n}\n\nconst AutoComplete: React.FC<Props> = ({\n  label,\n  placeholder,\n  itemsList,\n  handleSelectedItemsChange,\n  selectedItems,\n}) => {\n  const [pickerItems, setPickerItems] = React.useState(itemsList);\n\n  return (\n    <CUIAutoComplete\n      label={label}\n      placeholder={placeholder}\n      items={pickerItems}\n      disableCreateItem={true}\n      selectedItems={selectedItems}\n      onSelectedItemsChange={(changes) =>\n        handleSelectedItemsChange(changes.selectedItems)\n      }\n      hideToggleButton={true}\n      renderCustomInput={(inputProps) => (\n        <InputGroup rounded=\"md\">\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={<SearchIcon color=\"gray.300\" />}\n          />\n          <Input {...inputProps} color=\"#ffffff\" />\n        </InputGroup>\n      )}\n      listStyleProps={{ overflow: \"auto\", rounded:\"md\"}}\n    />\n  );\n};\n\nexport default AutoComplete;\n","import React from 'react';\n\nimport { City } from '../../types/City';\nimport { Grid, Box } from '@chakra-ui/react';\n\ninterface Props {\n  selectedItems: City[];\n}\n\nconst ResultsLayout: React.FC<Props> = ({ selectedItems }) => {\n  return (\n    <Grid\n      templateColumns={['1fr', 'repeat(3, 1fr)']}\n      gap={6}\n      paddingTop=\"20px\"\n      width=\"100%\"\n    >\n      <Box>cheese</Box>\n      <Box>cheese</Box>\n      <Box>cheese</Box>\n    </Grid>\n  );\n};\n\nexport default ResultsLayout;\n","import React from 'react';\nimport AutoComplete from '../../../components/AutoComplete';\nimport { City } from '../../../types/City';\nimport ResultsLayout from '../../../components/ResultsLayout';\n\nexport interface Props {\n  label: string;\n  placeholder: string;\n  itemsList: City[];\n}\n\nconst SearchAndDisplay: React.FC<Props> = ({ label, placeholder, itemsList }) => {\n  const [selectedItems, setSelectedItems] = React.useState<City[]>([]);\n\n  const handleSelectedItemsChange = (selectedItems?: City[]) => {\n    if (selectedItems) {\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  return (\n    <>\n      <AutoComplete\n        label={label}\n        placeholder={placeholder}\n        itemsList={itemsList}\n        handleSelectedItemsChange={handleSelectedItemsChange}\n        selectedItems={selectedItems}\n      />\n      <ResultsLayout selectedItems={selectedItems}/>\n    </>\n  );\n};\n\nexport default SearchAndDisplay;\n","import React from 'react';\nimport PageContainer from '../../components/PageContainer';\nimport { Box, Spinner, Alert, AlertIcon } from '@chakra-ui/react';\nimport { AllCities, Error, CitiesList } from '../../../src/types/Cities';\nimport { City } from '../../../src/types/City';\nimport getCities from '../../api/getCities';\nimport TextHeader from './TextHeader';\nimport SearchAndDisplay from './SearchAndDisplay';\n\n// getting the city data in this manner and this overall component\n// needs refactoring as think I can write this better....\n// component is a little long for my liking\n\nconst HomeContainer: React.FC = (Props) => {\n  const [allCitiesData, setAllCitiesData] = React.useState<\n    AllCities | Error | undefined | null\n  >(null);\n  const [error, setError] = React.useState<boolean>(false);\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [cityList, setCityList] = React.useState<CitiesList | null>(null);\n\n  React.useEffect(() => {\n    const getCityList = async () => {\n      const allData: AllCities | Error | undefined | null = await getCities();\n      setAllCitiesData(allData);\n    };\n    if (!allCitiesData) {\n      setLoading(true);\n      getCityList();\n      setLoading(false);\n    }\n  }, []);\n\n  //especially this.\n  React.useEffect(() => {\n    if (allCitiesData) {\n    if (allCitiesData!.results) {\n      const cityArray: City[] = [];\n      allCitiesData!.results.map((city) => {\n        const cityObj = {\n          ...city,\n          label: city.city,\n          value: city.city,\n        };\n        cityArray.push(cityObj);\n      });\n      const cityUpdate: CitiesList = { cities: cityArray };\n      setCityList(cityUpdate);\n    }\n    if (allCitiesData!.error) {\n      setError(true);\n    }\n  }\n  }, [allCitiesData]);\n\n  return (\n    <PageContainer>\n      <Box width=\"100%\" height=\"100%\" textAlign=\"center\">\n        <TextHeader />\n        <Box\n          paddingTop=\"30px\"\n          paddingBottom=\"30px\"\n          color=\"#000000\"\n          fontSize=\"16px\"\n          width=\"100%\"\n        >\n          {loading ? (\n            <Spinner />\n          ) : (\n            <>\n              {error ? (\n                <Alert status=\"error\">\n                  <AlertIcon />\n                  There was an error retrieving cities data\n                </Alert>\n              ) : (\n                <>\n                  {cityList && cityList.cities.length > 0 && (\n                    <SearchAndDisplay\n                      label=\"\"\n                      placeholder=\"Type City name\"\n                      itemsList={cityList!.cities}\n                    />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    </PageContainer>\n  );\n};\n\nexport default HomeContainer;\n","import React from 'react';\nimport HomeContainer from '../../containers/HomeContainer';\ninterface Props {}\n\nconst Home: React.FC<Props> = (Props) => {\n  return <HomeContainer />;\n};\n\nexport default Home;\n","import React from 'react';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <>\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","import { extendTheme } from '@chakra-ui/react';\n\nconst overrides = {\n  styles: {\n    global: () => ({\n      'html, body': {\n        overflowX: 'hidden',\n        fontSize: ['18px', '25px'],\n        scrollBehavior: 'smooth',\n        color: '#FFFFFF'\n      },\n    }),\n  },\n  textStyles: {\n    h1: {\n      fontSize: ['30px', '40px'],\n      lineHeight: '100%',\n      fontWeight:\"bold\"\n    },\n    h2: {\n      fontSize: ['36px', '48px'],\n      fontWeight: 'semibold',\n      lineHeight: '110%',\n      letterSpacing: '-1%',\n    },\n  },\n  fonts: {\n    heading: 'Open Sans',\n    body: 'Open Sans',\n  },\n  colors: {\n    primary: '#FFFFFF',\n  },\n  space: {},\n  config: {\n    cssVarPrefix: 'air-quality',\n    initialColorMode: 'light',\n    useSystemColorMode: false,\n  },\n};\nexport default extendTheme(overrides);\n","import React, { Component, ErrorInfo, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false\n  };\n\n  public static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return <h1>Sorry.. there was an error that was weird!</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport theme from './theme';\nimport '@fontsource/open-sans/400.css';\nimport ErrorBoundary from '../src/components/ErrorBoundary';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <ErrorBoundary>\n        <App />\n      </ErrorBoundary>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}